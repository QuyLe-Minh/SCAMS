**Note: 
+ API output will always have 3 fields: success, resultCode, message
+ {baseUrl} can be get using getApiUrl() from src/app/lib/util.

enum Role {
  Guest
  Student
  Lecturer
  Staff
}

Login: POST {baseUrl}/api/login
Input:{
    username: string,
    password: string,
}
Output: {
    success: bool,
    resultCode: number, 
    message: String, 
    username: String,
    role: Role,
    token: String //JWT token
} 
(Make 6 hours "auth_token" cookies)

Register: POST {baseUrl}/api/register
Input:{
    username: String,
    email: String,
    password: String,
    role: String
}
Output: {
    success: bool,
    resultCode: number, 
    message: String, 
}

Logout: GET {baseUrl}/api/logout
Input:{

}
Output: {
    success: bool,
    resultCode: number, 
    message: String, 
} 
(Remove "auth_token" cookies)

Add Room Booking: POST {baseUrl}/api/booking/add_room_booking
REQUIRE: Authentication token
Input:{
    roomName: string,
    date: Date,
    schedule: number,
}
Output: {
    success: bool,
    resultCode: number, 
    message: String, 
    data: {
        id: number
        userId: number,
        roomId: number,
        date: Date,
        schedule: number, // bitmap
    },
}

Delete Booking: DELETE {baseUrl}/api/booking/delete_booking
REQUIRE: Authentication token
Input:{
    bookingId: number;
}
Output: {
    success: bool,
    resultCode: number, 
    message: String, 
}

List Booking: GET {baseUrl}/api/booking/list_booking?
REQUIRE: Authentication token
Input:{}
Output: {
    success: bool,
    resultCode: number, 
    message: String, 
    data: [
        {
            id: number,
            userId: number,
            roomId: number,
            date: Date,
            schedule: number.
            room: {
                id: number
                name: String        
                description: String
                longitude: number
                latitude: number
                capacity: number
                floor: number
                buildingId: number
            }
        }
    ]
}

List room schedule: GET {baseUrl}/api/room/room_schedule
REQUIRE: Authentication token
Input:{}
Output: {
    success: bool,
    resultCode: number, 
    message: String, 
    data: [
        {
            id: number,
            userId: number,
            date: Date,
            schedule: number
        }
    ]
}
